{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Infrastructure to Code Assignment1",

  "Parameters": {
    "KeyPair": {
      "Description": "KeyPair",
      "Type": "AWS::EC2::KeyPair::KeyName"
    }
  },

  "Resources": {
    "EngineeringVpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "Tags": [{ "Key": "Name", "Value": "EngineeringVpc" }]
      }
    },

    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "EngineeringVpc" },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "AvailabilityZone": { "Fn::Select": [0, { "Fn::GetAZs": "" }] },
        "Tags": [{ "Key": "Name", "Value": "PublicSubnet1" }]
      }
    },

    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "EngineeringVpc" },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "AvailabilityZone": { "Fn::Select": [1, { "Fn::GetAZs": "" }] },
        "Tags": [{ "Key": "Name", "Value": "PublicSubnet2" }]
      }
    },

    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": { "Tags": [{ "Key": "Name", "Value": "EngineeringIGW" }] }
    },

    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "EngineeringVpc" },
        "InternetGatewayId": { "Ref": "InternetGateway" }
      }
    },

    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": { "VpcId": { "Ref": "EngineeringVpc" } }
    },

    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "AttachGateway",
      "Properties": {
        "RouteTableId": { "Ref": "PublicRouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "InternetGateway" }
      }
    },

    "Subnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnet1" },
        "RouteTableId": { "Ref": "PublicRouteTable" }
      }
    },

    "Subnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnet2" },
        "RouteTableId": { "Ref": "PublicRouteTable" }
      }
    },

    "WebserversSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "WebserversSG",
        "GroupDescription": "Enable SSH and HTTP",
        "VpcId": { "Ref": "EngineeringVpc" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22,
            "CidrIp": "24.118.224.253/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "web1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t3.micro",
        "KeyName": { "Ref": "KeyPair" },
        "ImageId": "ami-01cc34ab2709337aa",
        "SubnetId": { "Ref": "PublicSubnet1" },
        "SecurityGroupIds": [{ "Ref": "WebserversSG" }],
        "Tags": [{ "Key": "Name", "Value": "web1" }],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": ["", [
              "#!/bin/bash\n",
              "yum update -y\n",
              "yum install -y git httpd php\n",
              "service httpd start\n",
              "chkconfig httpd on\n",
              "aws s3 cp s3://seis665-public/index.php /var/www/html/\n"
            ]]
          }
        }
      }
    },

    "web2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t3.micro",
        "KeyName": { "Ref": "KeyPair" },
        "ImageId": "ami-01cc34ab2709337aa",
        "SubnetId": { "Ref": "PublicSubnet2" },
        "SecurityGroupIds": [{ "Ref": "WebserversSG" }],
        "Tags": [{ "Key": "Name", "Value": "web2" }],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": ["", [
              "#!/bin/bash\n",
              "yum update -y\n",
              "yum install -y git httpd php\n",
              "service httpd start\n",
              "chkconfig httpd on\n",
              "aws s3 cp s3://seis665-public/index.php /var/www/html/\n"
            ]]
          }
        }
      }
    },

    "EngineeringTargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "VpcId": { "Ref": "EngineeringVpc" },
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "instance",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckPort": "80",
        "HealthCheckPath": "/"
      }
    },

    "EngineeringLB": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Subnets": [{ "Ref": "PublicSubnet1" }, { "Ref": "PublicSubnet2" }],
        "SecurityGroups": [{ "Ref": "WebserversSG" }]
      }
    },

    "Listener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "LoadBalancerArn": { "Ref": "EngineeringLB" },
        "Port": 80,
        "Protocol": "HTTP",
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": { "Ref": "EngineeringTargetGroup" }
          }
        ]
      }
    }
  },

  "Outputs": {
    "WebUrl": {
      "Description": "Load Balancer DNS Name",
      "Value": { "Fn::GetAtt": ["EngineeringLB", "DNSName"] }
    }
  }
}
